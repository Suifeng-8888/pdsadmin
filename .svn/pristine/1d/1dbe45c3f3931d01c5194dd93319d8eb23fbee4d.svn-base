package com.hniois.util;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.List;

public class ExcelExport {
    //创建工作薄 version版本 headTitle大标题 excelPath生成的文档,titles为小标题列名fieldData存放excel文档的文本内容
    public static String createExcel(String version, String headTitle, String excelPath, ArrayList<String> titles, List<List<String>> fieldData)throws Exception{
        //        String excelPath="d:\\temp\\2007.xlsx";//excel文档生成的路径及名称
        //        String headTitle="采购供应商信息表";
        //存放对象对应的属性名,作为小标题存在
        // ArrayList<String> titles=new ArrayList<String>();
        // 存放所放对象的主体信息
        // List<List<String>> fieldData=new ArrayList<List<String>>();

        // XSSFWork used for .xslx (>=2007), HSSWorkbook for 03 .xsl
        //创建工作簿
        Workbook wbook = null;
        if (version.equals("2007")) {
            wbook = new XSSFWorkbook();// 创建 一个excel文档对象
        } else if (version.equals("2003")) {
            wbook = new HSSFWorkbook();// 创建 一个excel文档对象
        }
        //创建sheet工作表
        Sheet st=wbook.createSheet("供应商信息表");
        //通过sheet创建行
        Row row1=st.createRow(0);//第一行
        row1.setHeightInPoints(32);// 设置主标题行高32像素
        Cell cell1=row1.createCell(0);
        cell1.setCellValue(headTitle);
        cell1.setCellStyle(HeadStyle(wbook));//设置主标题样式
        //合并单元格参数说明：1：开始行 2：结束行  3：开始列 4：结束列
        st.addMergedRegion(new CellRangeAddress(0,0,0,titles.size()-1));

        Row row2=st.createRow(1);//第二行
        row2.setHeightInPoints(28);// 设置小标题行高28像素

        //将小标题数据放入第二行对应的单元格中
        for(int i=0;i<titles.size();i++){
            Cell cell=row2.createCell(i);
            cell.setCellValue(titles.get(i));
            cell.setCellStyle(titleStyle(wbook));//设置小标题样式
        }
        int rownum=2;//行的计数
        //将具体的没个数据放入设置的excel文档中
        for(int i=0;i<fieldData.size();i++){
            Row row=st.createRow(i+rownum);
            row.setHeightInPoints(20);//设置主体内容行高未20像素
            //获取每一行对应的单元格并放入对象
            for(int j=0;j<fieldData.get(i).size();j++){
                Cell cell=row.createCell(j);
                cell.setCellValue(fieldData.get(i).get(j));
                cell.setCellStyle(textStyle(wbook));//设置正文样式
            }
        }

        FileOutputStream outputStream = new FileOutputStream(excelPath);
        wbook.write(outputStream);//将excel文件写入工作流
        outputStream.close();// 关闭文件输出流
        return excelPath;
    }

    //设置大标题的样式
    public static CellStyle HeadStyle(Workbook workbook){
        CellStyle style = workbook.createCellStyle();// 创建样式对象
        // 设置对齐方式
        style.setAlignment(CellStyle.ALIGN_CENTER_SELECTION);// 水平居中
        style.setVerticalAlignment(CellStyle.VERTICAL_CENTER);// 垂直居中
        //设置边框
        style.setBorderBottom(CellStyle.BORDER_THIN); //下边框
        style.setBorderLeft(CellStyle.BORDER_THIN);//左边框
        style.setBorderTop(CellStyle.BORDER_THIN);//上边框
        style.setBorderRight(CellStyle.BORDER_THIN);//右边框
        //  style.setWrapText(true);// 设置单元格内容是否自动换行
        // 设置单元格字体
        Font font = workbook.createFont(); // 创建字体对象
        font.setFontHeightInPoints((short)26);// 设置字体大小
        font.setFontName("黑体");// 设置为宋体字
        font.setBoldweight(Font.BOLDWEIGHT_BOLD);// 设置粗体
        style.setFont(font);// 将字体加入到样式对象
        return style;
    }

    //设置小标题样式
    public static  CellStyle titleStyle(Workbook workbook){
        CellStyle style = workbook.createCellStyle();// 创建样式对象
        // 设置对齐方式
        style.setAlignment(CellStyle.ALIGN_CENTER_SELECTION);// 水平居中
        style.setVerticalAlignment(CellStyle.VERTICAL_CENTER);// 垂直居中
        //设置边框
        style.setBorderBottom(CellStyle.BORDER_THIN); //下边框
        style.setBorderLeft(CellStyle.BORDER_THIN);//左边框
        style.setBorderTop(CellStyle.BORDER_THIN);//上边框
        style.setBorderRight(CellStyle.BORDER_THIN);//右边框
        //style.setWrapText(true);// 设置单元格内容是否自动换行
        // 设置单元格字体
        Font font = workbook.createFont(); // 创建字体对象
        font.setFontHeightInPoints((short) 16);// 设置字体大小
        font.setFontName("宋体");// 设置为宋体字
        font.setBoldweight(Font.BOLDWEIGHT_BOLD);// 设置粗体
        style.setFont(font);// 将字体加入到样式对象
        return style;
    }

    //设置文本样式
    public static CellStyle textStyle(Workbook workbook){
        CellStyle style = workbook.createCellStyle();// 创建样式对象
        // 设置对齐方式
        style.setAlignment(CellStyle.ALIGN_CENTER_SELECTION);// 水平居中
        style.setVerticalAlignment(CellStyle.VERTICAL_CENTER);// 垂直居中
        //设置边框
        style.setBorderBottom(CellStyle.BORDER_THIN); //下边框
        style.setBorderLeft(CellStyle.BORDER_THIN);//左边框
        style.setBorderTop(CellStyle.BORDER_THIN);//上边框
        style.setBorderRight(CellStyle.BORDER_THIN);//右边框
        // style.setWrapText(true);// 设置单元格内容是否自动换行
        // 设置单元格字体
        Font font = workbook.createFont(); // 创建字体对象
        font.setFontHeightInPoints((short) 11);// 设置字体大小
        font.setFontName("宋体");// 设置为宋体字
        style.setFont(font);// 将字体加入到样式对象
        return style;
    }
}
