package com.hniois.controller.item;

import com.alibaba.fastjson.JSON;
import com.hniois.entity.item.SendCheck;
import com.hniois.service.item.impl.ItemService;
import net.sf.json.JSONArray;

import net.sf.json.JSONObject;
import com.hniois.common.page.Page;
import com.hniois.controller.base.BaseController;
import com.hniois.entity.item.Item;
import com.hniois.service.item.ItemManage;
import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import javax.annotation.Resource;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.List;

@Controller
@RequestMapping("/item")
public class ItemAction extends BaseController {
    //样品
    @Resource(name = "itemService")
    private ItemManage itemService;

    private String item_list = "item/item_list";
    private String item_edit = "item/item_edit";

    private String send_check="item/send_check";

    @RequestMapping("/toPage")
    public ModelAndView toPage(Page e){
        ModelAndView mv=this.getModelAndViewToPage(e);
        mv.setViewName(item_list);
        return mv;
    }

    /**
     * 分页查询
     */

    @RequestMapping(value="/list")
    @ResponseBody
    public String list(Item e) throws Exception{
        //获取当前页面
        int currPage=getThisPage(e.getPage());
        //获取每页显示条数
        int limit=getThisLimit(e.getLimit());
        //重新设置对象中分页信息的偏移量和每页显示条数
        e.setOffset((currPage-1)*limit);
        e.setPageSize(limit);
        Page page=itemService.findPage(e);
        return JSON.toJSONString(page);
    }


    /**
     * 新增or编辑页面
     * @return
     */
    @RequestMapping(value="/toEdit")
    public ModelAndView edit(Item e) throws Exception{
        ModelAndView mv=this.getModelAndView();
        Item item=new Item();
        if(StringUtils.isNotEmpty(e.getItemid())){
            item=itemService.find(e);
        }
        item.setCode(e.getCode());
        mv.addObject("item",item);
        mv.setViewName(item_edit);
        return mv;
    }


    /**
     * 保存新增
     */
    @RequestMapping(value = "/add")
    @ResponseBody
    public String add(Item e) throws Exception{
        JSONObject obj= getMsg();//返回信息
        Item item=new Item();
        item.setItemid(e.getItemid());
        //判断当前对象是否已经存在
        if(itemService.findCount(item)>0){
            setMsg(obj,"error","用户ID已存在!");
        }else{
            itemService.save(e);
        }

       return obj.toString();
    }

    /**
     * 保存编辑
     */
    @RequestMapping("/update")
    @ResponseBody
    public String update(Item e){
       net.sf.json.JSONObject obj=getMsg();
        try {
            itemService.update(e);

        }catch (Exception ex){
            setMsg(obj,"failed","编辑失败");
        }

        return obj.toString();
    }

    /**
     * 删除数据
     */
    @RequestMapping("/delete")
    @ResponseBody
    public String delete(Item e){
        net.sf.json.JSONObject obj=getMsg();
        Item item=new Item();
        item.setItemid(e.getItemid());
        item.setItemname(e.getItemname());
        try {
            itemService.delete(item);
        }catch(Exception ex){
            setMsg(obj,"delete failed","删除失败!");
        }

        return obj.toString();
    }

    /**
     * 批量删除数据
     * @param e
     * @return
     * @throws Exception
     */
    @RequestMapping("/deletes")
    @ResponseBody
    public String deletes(Item e)throws Exception{
        JSONObject obj=getMsg();
        itemService.deleteBatch(e);
        return obj.toString();
    }

    /**
     * 获取送检样品信息
     * @param e
     * @return
     */
    @RequestMapping("/sendCheck")
    public ModelAndView send(Item e) throws Exception{
        ModelAndView mv=this.getModelAndView();
        //获取所有要送检的样品信息
       List<Item> list=itemService.sendCheck(e);
       //根据样品信息获取要送检的对象
       SendCheck send=itemService.getSend(list);
        mv.addObject("send",send);
        mv.setViewName(send_check);
        return mv;
    }


    /**
     * 查询List
     * @param e
     * @return json
     * */
    @RequestMapping(value="/findList")
    @ResponseBody
    public String findList(Item e) throws Exception {
        List<Item> list = itemService.findList(e);
        JSONArray arr = JSONArray.fromObject(list);
        return arr.toString();
    }

}
